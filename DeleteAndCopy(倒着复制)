package ding.exercise;

import java.util.Arrays;
import java.util.List;

import org.junit.Test;
/**
 * 删掉所有的a ，并把 b 复制一个
 * 思路：
 * 记录所有不是 a 的元素的个数并赋给原数组（== 删掉a），对b计数
 * 两者相加即是新链表长度
 * 扩容
 * 从最后一项开始插入元素，遇 b c_new[i--] = 'b'
 * 
 */
public class DeleteAndCopy {	

	public static void Method(){
		String s = "abaaabjkjdbajkdbuuebdbbabkaj";
//		String s = "abaaaabjk";
		char[] c = s.toCharArray();
		int n = 0,count_b = 0;
		for(int i=0;i<c.length;i++){
			if(c[i]!='a'){
				c[n++] = c[i];
			}
			if(c[i] == 'b'){
				count_b++;
			}
		}
		System.out.println("----1---:"+Arrays.toString(c));
		int newLen = n + count_b;
		char[] c_n = new char[newLen];
		/*###################   厉害了       #####################*/
    //底层复制数组，进行扩容
		
		System.arraycopy(c, 0, c_n, 0, Math.min(newLen, c.length));
		System.out.println("c_n.length"+c_n.length);
		
		/*############################################*/
		
		System.out.println("----2---:"+Arrays.toString(c_n));
		System.out.println(c_n);
		
		//c[newLen-1] 是最后一项
		for(int i=newLen-1,j=n-1;j>=0;j--){
			c_n[i--] = c[j];
			if(c[j]=='b'){
				c_n[i--] = 'b';
			}
		}
		System.out.println(c_n);
	}


	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Method();
	}

}
